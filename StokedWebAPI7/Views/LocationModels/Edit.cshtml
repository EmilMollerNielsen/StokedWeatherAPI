@model StokedWebAPI7.Models.LocationModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit location details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LocationId)

        <div class="form-group">
            <label class="control-label col-md-2">Location name:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Latitude:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationLat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationLat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Longitude:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationLong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationLong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Description:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Surf location?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSurfLocation)
                    @Html.ValidationMessageFor(model => model.IsSurfLocation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">SUP location?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSUPLocation)
                    @Html.ValidationMessageFor(model => model.IsSUPLocation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">White water location?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsWhiteWaterLocation)
                    @Html.ValidationMessageFor(model => model.IsWhiteWaterLocation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Show on map?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.showLocation)
                    @Html.ValidationMessageFor(model => model.showLocation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Creation date:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Surf difficulty:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurfDifficulty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SurfDifficulty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">SUP difficulty:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SUPDifficulty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SUPDifficulty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">White water difficulty:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.WhiteWaterDifficulty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WhiteWaterDifficulty, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <label class="control-label col-md-2">Choose image(NOT DONE):</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageData, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageData, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <label class="control-label col-md-2">Best wind speed:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.BestWindSpeed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BestWindSpeed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Best wind direction:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.BestWindDirection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BestWindDirection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Best wave height:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.BestWaveHeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BestWaveHeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Best wave direction:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.BestWaveDirection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BestWaveDirection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
